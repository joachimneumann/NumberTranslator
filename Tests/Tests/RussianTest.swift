// Note: This file is automatically generated
//       It will be overwritten when testing

import Testing
@testable import NumberTranslator

@Test func Russian() {
    let translator = RussianImplementation()
    // https: lingopie.com/blog/your-ultimate-guide-to-russian-numbers-how-to-count-in-russian/
    #expect(translator.translate(0).x == "ноль")
    #expect(translator.translate(1).x == "один")
    #expect(translator.translate(2).x == "два")
    #expect(translator.translate(3).x == "три")
    #expect(translator.translate(4).x == "четыре")
    #expect(translator.translate(5).x == "пять")
    #expect(translator.translate(6).x == "шесть")
    #expect(translator.translate(7).x == "семь")
    #expect(translator.translate(8).x == "восемь")
    #expect(translator.translate(9).x == "девять")
    #expect(translator.translate(10).x == "десять")
    #expect(translator.translate(11).x == "одиннадцать")
    #expect(translator.translate(12).x == "двенадцать")
    #expect(translator.translate(13).x == "тринадцать")
    #expect(translator.translate(14).x == "четырнадцать")
    #expect(translator.translate(15).x == "пятнадцать")
    #expect(translator.translate(16).x == "шестнадцать")
    #expect(translator.translate(17).x == "семнадцать")
    #expect(translator.translate(18).x == "восемнадцать")
    #expect(translator.translate(19).x == "девятнадцать")
    #expect(translator.translate(20).x == "двадцать")
    #expect(translator.translate(23).x == "двадцать три")
    #expect(translator.translate(30).x == "тридцать")
    #expect(translator.translate(33).x == "тридцать три")
    #expect(translator.translate(40).x == "сорок")
    #expect(translator.translate(50).x == "пятьдесят")
    #expect(translator.translate(60).x == "шестьдесят")
    #expect(translator.translate(70).x == "семьдесят")
    #expect(translator.translate(80).x == "восемьдесят")
    #expect(translator.translate(90).x == "девяносто")
    #expect(translator.translate(100).x == "стo")
    #expect(translator.translate(101).x == "стo один")
    #expect(translator.translate(111).x == "стo одиннадцать")
    #expect(translator.translate(131).x == "стo тридцать один")
    #expect(translator.translate(200).x == "двести")
    #expect(translator.translate(245).x == "двести сорок пять")
    #expect(translator.translate(300).x == "триста")
    #expect(translator.translate(375).x == "триста семьдесят пять")
    #expect(translator.translate(400).x == "четыреста")
    #expect(translator.translate(500).x == "пятьсот")
    #expect(translator.translate(600).x == "шестьсот")
    #expect(translator.translate(700).x == "семьсот")
    #expect(translator.translate(800).x == "восемьсот")
    #expect(translator.translate(900).x == "девятьсот")
    #expect(translator.translate(999).x == "девятьсот девяносто девять")
    #expect(translator.translate(1_000).x == "тысяча")
    #expect(translator.translate(1_348).x == "тысяча триста сорок восемь")
    #expect(translator.translate(1_534).x == "тысяча пятьсот тридцать четыре")
    #expect(translator.translate(2_000).x == "две тысячи")
    #expect(translator.translate(2_345).x == "две тысячи триста сорок пять")
    #expect(translator.translate(3_000).x == "три тысячи")
    #expect(translator.translate(4_000).x == "четыре тысячи")
    #expect(translator.translate(5_000).x == "пять тысяч")
    #expect(translator.translate(6_000).x == "шесть тысяч")
    #expect(translator.translate(7_000).x == "семь тысяч")
    #expect(translator.translate(8_000).x == "восемь тысяч")
    #expect(translator.translate(8_343).x == "восемь тысяч триста сорок три")
    #expect(translator.translate(9_000).x == "девять тысяч")
    #expect(translator.translate(9_203).x == "девять тысяч двести три")
    #expect(translator.translate(9_999).x == "девять тысяч девятьсот девяносто девять")
    #expect(translator.translate(10_000).x == "десять тысяч")
    #expect(translator.translate(11_000).x == "одиннадцать тысяч")
    #expect(translator.translate(11_111).x == "одиннадцать тысяч стo одиннадцать")
    #expect(translator.translate(12_000).x == "двенадцать тысяч")
    #expect(translator.translate(19_000).x == "девятнадцать тысяч")
    #expect(translator.translate(20_000).x == "двадцать тысяч")
    #expect(translator.translate(21_000).x == "двадцать одна тысяча")
    #expect(translator.translate(22_000).x == "двадцать две тысячи")
    #expect(translator.translate(23_000).x == "двадцать три тысячи")
    #expect(translator.translate(24_000).x == "двадцать четыре тысячи")
    #expect(translator.translate(25_000).x == "двадцать пять тысяч")
    #expect(translator.translate(23_456).x == "двадцать три тысячи четыреста пятьдесят шесть")
    #expect(translator.translate(41_000).x == "сорок одна тысяча")
    #expect(translator.translate(99_999).x == "девяносто девять тысяч девятьсот девяносто девять")
    #expect(translator.translate(100_000).x == "стo тысяч")
    #expect(translator.translate(101_000).x == "стo одна тысяча")
    #expect(translator.translate(101_111).x == "стo одна тысяча стo одиннадцать")
    #expect(translator.translate(234_567).x == "двести тридцать четыре тысячи пятьсот шестьдесят семь")
    #expect(translator.translate(243_382).x == "двести сорок три тысячи триста восемьдесят два")
    #expect(translator.translate(999_999).x == "девятьсот девяносто девять тысяч девятьсот девяносто девять")
    #expect(translator.translate(101_101_101).x == "стo один миллион стo одна тысяча стo один")
    #expect(translator.translate(234_567_890).x == "двести тридцать четыре миллиона пятьсот шестьдесят семь тысяч восемьсот девяносто")
    #expect(translator.translate(999_999_999).x == "девятьсот девяносто девять миллионов девятьсот девяносто девять тысяч девятьсот девяносто девять")
    #expect(translator.translate(1_000_000_000).x == "один миллиард")
    #expect(translator.translate(2_000_000_000).x == "два миллиарда")
    #expect(translator.translate(10_000_000_000).x == "десять миллиардов")
    #expect(translator.translate(1_000_000_000_000).x == "один триллион")
    #expect(translator.translate(2_000_000_000_000).x == "два триллиона")
    #expect(translator.translate(10_000_000_000_000).x == "десять триллионов")
    // unclear:
    // 1_000_000 один миллион
    // 2_000_000 два миллиона
    // 3_000_000 три миллиона
    // 4_000_000 четыре миллиона
    // 5_000_000 пять миллионов
    // 6_000_000 шесть миллионов
    // 7_000_000 семь миллионов
    // 8_000_000 восемь миллионов
    // 9_000_000 девять миллионов
    // 10_000_000 десять миллионов
    // 100_000_000 стo миллионов
    // 22_000 "двадцать две тысячи"  "двадцать два тысячи"
    // 21_000 "двадцать одна тысяча" "двадцать один тысяча"
    // 41_000 "сорок одна тысяча"    "сорок один тысяча"
    // 10_000_000_000_000  "дксять триллионов" "десять триллионов"
}

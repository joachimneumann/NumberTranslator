// Note: This file is automatically generated
//       It will be overwritten when testing

import Testing
@testable import NumberTranslator

@Test func Esperanto() {
    let translator = NumberTranslator()
    #expect(translator.translate(0, to: .esperanto).x == "nul")
    #expect(translator.translate(1, to: .esperanto).x == "unu")
    #expect(translator.translate(2, to: .esperanto).x == "du")
    #expect(translator.translate(3, to: .esperanto).x == "tri")
    #expect(translator.translate(4, to: .esperanto).x == "kvar")
    #expect(translator.translate(5, to: .esperanto).x == "kvin")
    #expect(translator.translate(6, to: .esperanto).x == "ses")
    #expect(translator.translate(7, to: .esperanto).x == "sep")
    #expect(translator.translate(8, to: .esperanto).x == "ok")
    #expect(translator.translate(9, to: .esperanto).x == "naŭ")
    #expect(translator.translate(10, to: .esperanto).x == "dek")
    #expect(translator.translate(11, to: .esperanto).x == "dek unu")
    #expect(translator.translate(12, to: .esperanto).x == "dek du")
    #expect(translator.translate(13, to: .esperanto).x == "dek tri")
    #expect(translator.translate(16, to: .esperanto).x == "dek ses")
    #expect(translator.translate(20, to: .esperanto).x == "dudek")
    #expect(translator.translate(21, to: .esperanto).x == "dudek unu")
    #expect(translator.translate(22, to: .esperanto).x == "dudek du")
    #expect(translator.translate(23, to: .esperanto).x == "dudek tri")
    #expect(translator.translate(24, to: .esperanto).x == "dudek kvar")
    #expect(translator.translate(30, to: .esperanto).x == "tridek")
    #expect(translator.translate(42, to: .esperanto).x == "kvardek du")
    #expect(translator.translate(100, to: .esperanto).x == "cent")
    #expect(translator.translate(104, to: .esperanto).x == "cent kvar")
    #expect(translator.translate(105, to: .esperanto).x == "cent kvin")
    #expect(translator.translate(106, to: .esperanto).x == "cent ses")
    #expect(translator.translate(221, to: .esperanto).x == "ducent dudek unu")
    #expect(translator.translate(222, to: .esperanto).x == "ducent dudek du")
    #expect(translator.translate(223, to: .esperanto).x == "ducent dudek tri")
    #expect(translator.translate(224, to: .esperanto).x == "ducent dudek kvar")
    #expect(translator.translate(442, to: .esperanto).x == "kvarcent kvardek du")
    #expect(translator.translate(1_000, to: .esperanto).x == "mil")
    #expect(translator.translate(1_729, to: .esperanto).x == "mil sepcent dudek naŭ")
    #expect(translator.translate(22_729, to: .esperanto).x == "dudek du mil sepcent dudek naŭ")
    #expect(translator.translate(1_000_000, to: .esperanto).x == "miliono")
    #expect(translator.translate(2_200_000, to: .esperanto).x == "du milionoj ducent mil")
    #expect(translator.translate(3_022_729, to: .esperanto).x == "tri milionoj dudek du mil sepcent dudek naŭ")
    #expect(translator.translate(1_000_000_000, to: .esperanto).x == "miliardo")
    #expect(translator.translate(4_003_022_729, to: .esperanto).x == "kvar miliardoj tri milionoj dudek du mil sepcent dudek naŭ")
    #expect(translator.translate(1_000_000_000_000, to: .esperanto).x == "biliono")
    #expect(translator.translate(5_004_003_022_729, to: .esperanto).x == "kvin bilionoj kvar miliardoj tri milionoj dudek du mil sepcent dudek naŭ")
    #expect(translator.translate(-1, to: .esperanto).x == "minus unu")
    #expect(translator.translate(-1_000_000, to: .esperanto).x == "minus miliono")
    #expect(translator.translate(1.5, to: .esperanto).x == "unu kaj kvin")
}
